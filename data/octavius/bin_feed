#!/usr/bin/python

import argparse
import re
import os

parser = argparse.ArgumentParser(description='Convert Reddit and Youtube links into feed links')
parser.add_argument('url', type=str, help='The regular reddit / youtube url')
parser.add_argument('-c', '--copy', dest='copy', action='store_true')
parser.add_argument('-w', '--weekly', dest='weekly', action='store_true')
parser.add_argument('-s', '--subscribe', dest='subscribe', action='store_true')
args = parser.parse_args()

short_reddit_match = re.match("[http\:\/\/|https\:\/\/]?(.*)\.reddit\.com.*", args.url)
long_reddit_match = re.match(".*reddit\.com\/r\/(([A-z]|[0-9])*)\/", args.url)
youtube_match = re.match("https?\:\/\/www.youtube.com/channel/(.*)", args.url)

def reddit(subreddit):
    bare_url = "https://www.reddit.com/r/" + subreddit + "/"
    if args.weekly:
        bare_url += "top/.rss?t=week"
    else:
        bare_url += ".rss"

    return bare_url

def youtube(channel):
   return "https://www.youtube.com/feeds/videos.xml?channel_id=" + channel

if long_reddit_match:
    print "Detected long reddit url: " + long_reddit_match.group(1)
    rss_url = reddit(long_reddit_match.group(1))
elif short_reddit_match:
    print "Detected short reddit url: " + short_reddit_match.group(1)
    rss_url = reddit(short_reddit_match.group(1))
elif youtube_match:
    print "Detected youtube url: " +  youtube_match.group(1)
    rss_url = youtube(youtube_match.group(1))
else:
    print "Could not parse url"
    exit()

print "Generated feed url: " + rss_url
if args.subscribe:
    print "Subscribing in Zarek"
    feed_url = "http://zarek/rssreader/public.php?op=subscribe&feed_url=" + rss_url
    os.system("firefox '" + feed_url + "'")
if args.copy:
    print "Copying to clipboard"
    os.system("echo -n '%s' | xclip -i -selection clipboard" % rss_url)
